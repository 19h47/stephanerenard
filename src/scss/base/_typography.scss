/**
 * TYPOGRAPHIE
 */

html
{
    $original-font-size: 62.5%;

	font:
    {
		family: $font-body-family;
		size: $original-font-size;
	}

	@include to('lg')
	{
	    font:
        {
	    	size: ($original-font-size * 3/4);
	    }
	}
}

body
{
    -webkit-font-smoothing: antialiased;
    font:
    {
        size: (($base-font-size / 10px) * 1rem);
        weight: map-get($font-weight, regular);
    }
    line-height: $base-line-height;
    text-rendering: optimizeLegibility;
}

.paragraph
{
    &.has-stroke
    {
        &::after
        {
            display: block;
            content: '—';
            line-height: 0.5;
        }
    }
}

.is-script
{
    font:
    {
        family: $font-script-family;
        style: italic;
        weight: normal;
    }
}

// font-size(rem)/line-height/font-weight/font-family/letter-spacing
$titles: 
(
    h1: 
    (
        42,
        42,
        map-get( $font-weight, bold ),
        $font-title-family,
        40
    ),
    
    h2:(
        35,
        42,
        map-get( $font-weight, bold),
        $font-title-family,
        40
    ),

    h3:(
        28,
        42,
        map-get( $font-weight, light),
        $font-title-family,
        40
    ),

    h4: 
    (
        18,
        21,
        map-get( $font-weight, bold ),
        $font-title-family,
        100    
    ),

    // h5: 
    // (
    //     2.5,
    //     4.8,
    //     map-get( $font-weight, regular ),
    //     $font-title-family,
    //     0
    // ),

    // h6:
    // (
    //     2.2,
    //     3.5,
    //     map-get( $font-weight, bold),
    //     $font-title-family,
    //     0
    // )
);

@each $value, $map in $titles {
    $font-size: nth($map, 1);
    $line-height: nth($map, 2);
    $weight: nth($map, 3);
    $family: nth($map, 4);
    $letter-spacing: nth($map, 5);

    #{$value}, .#{$value} {
        font: 
        {
            family: $family;
            size: ($font-size / $unitless-base-font-size) * 1em;
            weight: $weight;
        }
        
        @include letter-spacing($letter-spacing);
        @if $line-height == normal {
            line-height: normal;
        } @else {
            line-height: ($line-height / $font-size) * 1em; 
            margin: 
            {
                top: ( $line-height / $font-size ) * 1em;
                right: 0;
                bottom: ( ( $line-height / $font-size ) / 2) * 1em;
                left: 0;
            }
        }

        &.has-stroke
        {
            &::after
            {
                display: block;
                content: '—';
                line-height: 0.5;
            }
        }
    }
}